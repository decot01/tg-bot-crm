from aiogram import Bot, Dispatcher, types
from aiogram.dispatcher import dispatcher
from aiogram.utils import executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from pyowm import OWM
from pyowm.utils import config
from pyowm.utils import timestamps
from pyowm.utils.config import get_default_config
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import ChatType
import sqlite3
from aiogram import *
import time
class MyBot:
    #–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    def __init__(self):
        self._TOKEN = '5759536990:AAGisVBTSrScFeECXF-0mq6MuenGAuxEPuo'#—Ç–æ–∫–µ–Ω
        self.bot = Bot(self._TOKEN)
        self.dp = Dispatcher(bot=self.bot, storage=MemoryStorage())
        self.memory = MemoryStorage()

    def start(self):
        #—ç–ª–µ–º–µ–Ω—Ç—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        help_button = KeyboardButton('/help üé´')
        price_button = KeyboardButton('/showusersdb üìú')
        info_button = KeyboardButton('/statistics üìä')
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(help_button, price_button, info_button)
        #–∫–æ–º–∞–Ω–¥—ã
        @self.dp.message_handler(commands=['start'])
        async def hello(message: types.message):
            await message.answer('–ø—Ä–∏–≤–µ—Ç –Ω–∞–ø–∏—à–∏ /help —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥')

        @self.dp.message_handler(commands=['help'])
        async def hello(message: types.message):
            await message.answer('üé´—á—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç???üé´\n/showusersdb - –ø–æ–∫–∞—Ü–∞–≤–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö\n/statistics - –∫–æ–ª–∏—á–µ–≤—Å—Ç–≤–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–∑—å–ª–æ–≤–∞—Ç–µ–ª–µ–π \n/sending - —Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–∞', reply_markup=keyboard)

        @self.dp.message_handler(commands=['showusersdb'])
        async def hello(message: types.message):
            # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            await message.answer('üìú–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Öüìú')
            print("–±—ã–ª–∞ –ø–æ–∫–∞–∑–∞–Ω–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º—è :",time.ctime())
                # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            conn = sqlite3.connect('users.db')
            cur = conn.cursor()
            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            cur.execute("SELECT * FROM users")
            # –ß—Ç–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
            rows = cur.fetchall()
            # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª—å
            for row in rows:
                await message.answer(row)
            print("–±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–≤–µ–¥–µ–Ω—ã –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º—è :",time.ctime())
            # –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            conn.close()
            print('–∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º—è :',time.ctime())

        @self.dp.message_handler(commands=['statistics'])
        async def hello(message: types.message):
                # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            conn = sqlite3.connect('users.db')
            cur = conn.cursor()

            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            cur.execute("SELECT numberid FROM users ORDER BY ROWID DESC LIMIT 1")

            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
            result = cur.fetchone()[0]

            # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –∫–æ–Ω–æ–ª—å
            await message.answer(f"üìä–µ—Å—Ç—å {result} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –Ω–∞ –≤–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µüìä")

            # –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            conn.close()

        @self.dp.message_handler(commands=['sending'])
        async def hello(message: types.message):
            mes = message.text
            mes = mes.replace("/sendingüì®","")
            mes = mes.replace("/sending","")
            await message.answer('üì®—Å—Ç–∞—Ä—Ç —Ä–∞—Å—Å—ã–ª–∫–∏üì®', reply_markup=keyboard)
            await self.dp.bot.send_message(chat_id='1001989620505', text=mes)#1001989620505    
            print('–Ω–∞—á–∞–Ω —Å—Ç–∞—Ä—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ id 1001989620505 –≤—Ä–µ–º—è :',time.ctime())
            
#–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
        executor.start_polling(self.dp, skip_updates=True)
#—Å—Ç–∞—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == '__main__':
    bot = MyBot()
    bot.start()