from aiogram import Bot, Dispatcher, types
from aiogram.dispatcher import dispatcher
from aiogram.utils import executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from pyowm import OWM
from pyowm.utils import config
from pyowm.utils import timestamps
from pyowm.utils.config import get_default_config
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import ChatType

#–∫–ª–∞—Å—Å
class MyBot:
    #–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    def __init__(self):
        self._TOKEN = '5689385764:AAFs8vZoZGrSYUN-kqkDifoj0I0lEZh1dnU'#—Ç–æ–∫–µ–Ω
        self.bot = Bot(self._TOKEN)
        self.dp = Dispatcher(bot=self.bot, storage=MemoryStorage())
        self.memory = MemoryStorage()

    def start(self):
        #—ç–ª–µ–º–µ–Ω—Ç—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        help_button = KeyboardButton('/help üé´')
        price_button = KeyboardButton('/price üì†')
        info_button = KeyboardButton('/info üìä')
        pay_button = KeyboardButton('/reg üíµ')
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(help_button, price_button, info_button, pay_button)
        #–∫–æ–º–∞–Ω–¥—ã
        @self.dp.message_handler(commands=['start'])
        async def hello(message: types.message):
            await message.answer('–ø—Ä–∏–≤–µ—Ç –Ω–∞—à–∏ /help —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥')

        @self.dp.message_handler(commands=['help'])
        async def hello(message: types.message):
            await message.answer('—á—Ç–æ —É–º–µ–µ —ç—Ç–æ—Ç –±–æ—Ç???\n/price - —Ü–µ–Ω—ã –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–Ω—è—Ç  –∏—è—Ö –∏ –≥—Ä—É–ø–ø–µ\n/info - –æ –Ω–∞—Å \n/pay - –æ–ø–ª–∞—Ç–∞', reply_markup=keyboard)

        @self.dp.message_handler(commands=['price'])
        async def hello(message: types.message):
            await message.answer('nothing...', reply_markup=keyboard)

        @self.dp.message_handler(commands=['info'])
        async def hello(message: types.message):
            await message.answer('nothing...', reply_markup=keyboard)
        #—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        @self.dp.message_handler(commands=['reg'])
        async def registration_handler(msg: types.Message):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
            await msg.answer("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
            
            # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç
            answer_1 = await bot.await_answer()
            name = answer_1.text
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–π –≤–æ–ø
            await msg.answer("–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?")
            
            # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç
            answer_2 = await bot.await_answer()
            age = answer_2.text
            
            #... –¥–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏—è–µ–º –æ—Ç–≤–µ—Ç—ã
            
            # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ä–æ—Å–∞
            result_message = f"–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, {name}! –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç {age}."
            await msg.answer(result_message)

#–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
        executor.start_polling(self.dp, skip_updates=True)
#—Å—Ç–∞—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == '__main__':
    bot = MyBot()
    bot.start()
#examle
'''
        @self.dp.message_handler(commands=['reg'])
        async def hello(msg: types.Message):
                mes = msg.text

                if mes == '–ü—Ä–∏–≤–µ—Ç':
                    await self.dp.bot.send_message(chat_id=msg.from_user.id, text="–ü—Ä–∏–≤–µ—Ç —Ç–µ–±–µ —Ç–æ–∂–µ!")
'''